-- VHDL Entity proj_master_2025_lib.tb_003_layer.symbol
--
-- Created:
--          by - Admin.UNKNOWN (LAPTOP-7KFJT032)
--          at - 13:32:22 21.03.2025
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2017.1a (Build 5)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

entity tb_003_layer is
-- Declarations

end tb_003_layer ;

--
-- VHDL Architecture proj_master_2025_lib.tb_003_layer.struct
--
-- Created:
--          by - Admin.UNKNOWN (LAPTOP-7KFJT032)
--          at - 18:40:45 31.03.2025
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2017.1a (Build 5)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
library proj_master_2025_lib;
use proj_master_2025_lib.p_002_generic_01.all;


architecture struct of tb_003_layer is

   -- Architecture declarations

   -- Internal signal declarations
   signal ack_RX0      : std_logic;
   signal ack_RX1      : std_logic;
   signal clk          : std_logic;
   --enable      : in     std_logic;
   signal dst_RX2      : std_logic;
   signal layer_in0    : t_array_data_stdlv(0 to 1);
   signal layer_out1   : t_array_data_stdlv(0 to 7);
   signal layer_out2   : t_array_data_stdlv(0 to 0);
   signal ready_to_TX2 : std_logic;
   signal reset        : std_logic;
   signal src_TX0      : std_logic;
   signal src_TX1      : std_logic;


   -- Component Declarations
   component c_004_layer_01
   generic (
      g_layer_length_cur  : integer               := 4;
      g_layer_length_prev : integer               := 2;
      g_layer_bias        : t_array_integer       := (0,0,0,0);
      g_layer_weights     : t_array2D_integer     := ((0,0),(0,0),(0,0),(0,0));
      g_act_func          : t_activation_function := AF_RELU
   );
   port (
      clk         : in     std_logic ;
      reset       : in     std_logic ;
      --enable      : in     std_logic;
      dst_RX      : in     std_logic ;
      src_TX      : in     std_logic ;
      ready_to_TX : out    std_logic ;
      ack_RX      : out    std_logic ;
      layer_in    : in     t_array_data_stdlv (0 to g_layer_length_prev-1);
      layer_out   : out    t_array_data_stdlv (0 to g_layer_length_cur-1)
   );
   end component;

   -- Optional embedded configurations
   -- pragma synthesis_off
   for all : c_004_layer_01 use entity proj_master_2025_lib.c_004_layer_01;
   -- pragma synthesis_on


begin
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 eb1
   -- eb1 1
   -- gen clk signal
   process
   begin
     clk <= '1';
     wait for 5 ns;
     clk <= '0';
     wait for 5 ns;
   end process;

   -- HDL Embedded Text Block 2 eb2
   -- eb2 2
   -- gen permanent signals
   process
   begin
    reset <= '1';
    dst_RX2 <= '0';
    src_TX0 <= '0';
    
    layer_in0(0) <= STD_LOGIC_VECTOR(TO_SIGNED(200, c_DATA_WIDTH));
    layer_in0(1) <= STD_LOGIC_VECTOR(TO_SIGNED(-200, c_DATA_WIDTH));
   
    wait for 22 ns;
    reset <= '0';
   
    wait for 20 ns;
    --enable <= '1';
    src_TX0 <= '1';
   
    wait;
   end process;


   -- Instance port mappings.
   U_0 : c_004_layer_01
      generic map (
         g_layer_length_cur  => 8,
         g_layer_length_prev => 2,
         g_layer_bias        => (-465, -505, -406, -511, -446, -448, -434, -476),
         g_layer_weights     => ((-518, -180), (-527,  257), ( 148, -468), (-179,  572), ( 496,  146), ( 241,  470), (-234, -456), ( 494, -250)),
         g_act_func          => AF_RELU
      )
      port map (
         clk         => clk,
         reset       => reset,
         dst_RX      => ack_RX1,
         src_TX      => src_TX0,
         ready_to_TX => src_TX1,
         ack_RX      => ack_RX0,
         layer_in    => layer_in0,
         layer_out   => layer_out1
      );
   U_1 : c_004_layer_01
      generic map (
         g_layer_length_cur  => 1,
         g_layer_length_prev => 8,
         g_layer_bias        => ( 0 =>567),
         g_layer_weights     => (0=>(-1943, -1910, -1662, -1882, -2053, -2020, -2076, -1988)),
         g_act_func          => AF_HARD_SIGMOID
      )
      port map (
         clk         => clk,
         reset       => reset,
         dst_RX      => dst_RX2,
         src_TX      => src_TX1,
         ready_to_TX => ready_to_TX2,
         ack_RX      => ack_RX1,
         layer_in    => layer_out1,
         layer_out   => layer_out2
      );

end struct;
