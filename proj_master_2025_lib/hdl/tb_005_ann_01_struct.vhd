-- VHDL Entity proj_master_2025_lib.tb_005_ANN_01.symbol
--
-- Created:
--          by - Admin.UNKNOWN (LAPTOP-7KFJT032)
--          at - 17:54:41 01.04.2025
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2017.1a (Build 5)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

entity tb_005_ANN_01 is
-- Declarations

end tb_005_ANN_01 ;

--
-- VHDL Architecture proj_master_2025_lib.tb_005_ANN_01.struct
--
-- Created:
--          by - Admin.UNKNOWN (LAPTOP-7KFJT032)
--          at - 09:27:56 10.04.2025
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2017.1a (Build 5)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
library proj_master_2025_lib;
use proj_master_2025_lib.p_002_generic_01.all;


architecture struct of tb_005_ANN_01 is

   -- Architecture declarations

   -- Internal signal declarations
   signal ack_RX      : std_logic;
   signal clk         : std_logic;
   signal dst_RX      : std_logic;
   -- layer_in    : in     t_array_data_stdlv (0 to 1);
-- layer_out   : out    t_array_data_stdlv (0 to 1)
   signal layer_in    : t_array_data_stdlv(0 to 1);
   signal layer_out   : t_array_data_stdlv(0 to 0);
   signal ready_to_TX : std_logic;
   signal reset       : std_logic;
   signal reset_last  : std_logic;
   signal sig_STM     : std_logic;
   signal sig_ZV      : integer;
   signal src_TX      : std_logic;


   -- Component Declarations
   component c_x_ANN_01
   port (
      clk         : in     std_logic ;
      reset       : in     std_logic ;
      src_TX      : in     std_logic ;
      ack_RX      : out    std_logic ;
      dst_RX      : in     std_logic ;
      ready_to_TX : out    std_logic ;
      -- layer_in    : in     t_array_data_stdlv (0 to 1);
      -- layer_out   : out    t_array_data_stdlv (0 to 1)
      layer_in    : in     t_array_data_stdlv (0 to 1);
      layer_out   : out    t_array_data_stdlv (0 to 0)
   );
   end component;

   -- Optional embedded configurations
   -- pragma synthesis_off
   for all : c_x_ANN_01 use entity proj_master_2025_lib.c_x_ANN_01;
   -- pragma synthesis_on


begin
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 eb1
   -- eb1 1
   -- gen clk signal
   process
   begin
     clk <= '1';
     wait for 5 ns;
     clk <= '0';
     wait for 5 ns;
   end process;

   -- HDL Embedded Text Block 2 eb2
   -- eb2 2
   -- gen permanent signals
   process
   begin
    reset <= '1';
    
    wait for 22 ns;
    reset <= '0';
   
    wait for 20 ns;
   
    wait;
   end process;

   -- HDL Embedded Text Block 3 eb3
   -- eb3 3
   -- gen test signals for ann
   process(clk)
   begin
     if rising_edge(clk) then
       reset_last <= reset;
   
       if reset = '1' then
         sig_STM <= '0';
         sig_ZV <= 0;
         
         src_TX <= '0';
         dst_RX <= '0';
       end if;
   
       if reset = '0' and reset_last = '1' then
         sig_STM <= '1';
       end if;
       
       if sig_STM = '1' then
         src_TX <= '1';
         dst_RX <= '1';
         case(sig_ZV) is
           when 0 =>
             layer_in(0) <= STD_LOGIC_VECTOR(TO_SIGNED(20, c_DATA_WIDTH));
             layer_in(1) <= STD_LOGIC_VECTOR(TO_SIGNED(-20, c_DATA_WIDTH));
           
           when 1 =>
             layer_in(0) <= STD_LOGIC_VECTOR(TO_SIGNED(128, c_DATA_WIDTH));
             layer_in(1) <= STD_LOGIC_VECTOR(TO_SIGNED(255, c_DATA_WIDTH));
           when 2 =>
             layer_in(0) <= STD_LOGIC_VECTOR(TO_SIGNED(-128, c_DATA_WIDTH));
             layer_in(1) <= STD_LOGIC_VECTOR(TO_SIGNED(-128, c_DATA_WIDTH));
           when 3 =>
             layer_in(0) <= STD_LOGIC_VECTOR(TO_SIGNED(-300, c_DATA_WIDTH));
             layer_in(1) <= STD_LOGIC_VECTOR(TO_SIGNED(10, c_DATA_WIDTH));
           
           when others =>
             layer_in(0) <= STD_LOGIC_VECTOR(TO_SIGNED(0, c_DATA_WIDTH));
             layer_in(1) <= STD_LOGIC_VECTOR(TO_SIGNED(0, c_DATA_WIDTH));
           
         end case;
           
         
         
         if ack_RX = '1' then
           sig_ZV <= sig_ZV+1;
         end if;
       end if;
       
     end if;
    
   
   
   end process;
   
   
   


   -- Instance port mappings.
   U_0 : c_x_ANN_01
      port map (
         clk         => clk,
         reset       => reset,
         src_TX      => src_TX,
         ack_RX      => ack_RX,
         dst_RX      => dst_RX,
         ready_to_TX => ready_to_TX,
         layer_in    => layer_in,
         layer_out   => layer_out
      );

end struct;
